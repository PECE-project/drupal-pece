<?php

/**
 * @file
 * Contains pece_essays.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function pece_essays_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pece_essays module.
    case 'help.page.pece_essays':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provide common functionalities among Essays') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter() for the PECE essay edit form.
 *
 *  - Emphasize edit layout button
 *  - Hide legacy display toggle from essays without legacy HTML.
 */
function pece_essays_form_node_pece_essay_edit_form_alter(&$form, $form_state, $form_id) {
  pece_essays_emphasize_edit_layout_button($form);

  // Hides legacy display toggle from essays without legacy HTML on edit forms.
  // We will *always* hide the legacy HTML toggle on the add form.
  $node = $form_state->getFormObject()->getEntity();
  if (!$node->field_legacy_rendered_html->value) {
    unset($form['field_override_legacy_with_new']);
  }
}

/**
 * Implements hook_form_alter() for the pece essay form (meaning add/create).
 *
 *  - Emphasize edit layout button
 *  - Hide legacy display toggle from all new essays.
 */
function pece_essays_form_node_pece_essay_form_alter(&$form, $form_state, $form_id) {
  pece_essays_emphasize_edit_layout_button($form);

  // On the edit form, we only hide the legacy HTML toggle conditionally.
  unset($form['field_override_legacy_with_new']);
}

/**
 * Implements hook_entity_view_mode_alter().
 */
function pece_essays_entity_view_mode_alter(&$view_mode, $context) {
  $enabled_displays = [];
  $load_ids = [];
  $entity_type = $context->getEntityType();
  $config_prefix = 'core.entity_view_display';
  $entity_type_id = $entity_type->id();
  $ids = \Drupal::configFactory()->listAll($config_prefix . '.' . $entity_type_id . '.' . $context->bundle() . '.');
  foreach ($ids as $id) {
    $config_id = str_replace($config_prefix . '.', '', $id);
    [,, $display_mode] = explode('.', $config_id);
    if ($display_mode != 'default') {
      $load_ids[] = $config_id;
    }
  }
  $displays = \Drupal::service('entity_type.manager')->getStorage('entity_view_display')->loadMultiple($load_ids);
  foreach ($displays as $display) {
    if ($display->status()) {
      $enabled_displays[] = $display->get('mode');
    }
  }

  if ($view_mode !== 'full' && !in_array($view_mode, $enabled_displays)) {
    $view_mode = 'card';
  }
}

/**
 * Implements hook_form_alter().
 *
 * Attach a process to the formatter.
 */
function pece_essays_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_ids = ['layout_builder_update_block', 'layout_builder_add_block'];

  if (!in_array($form_id, $form_ids)) {
    return;
  }

  $form['settings']['formatter']['#process'][] = '_peceFormatterSettingsProcessCallback';
}

/**
 * Process callback for layout builder block form.
 *
 * Limit formatter configuration options.
 */
function _peceFormatterSettingsProcessCallback(array $element, FormStateInterface $form_state) {
  if (isset($element['type'])) {
    unset($element['type']['#options']['blazy_entity']);
    unset($element['type']['#options']['splide_entityreference']);
    unset($element['type']['#options']['entity_reference_entity_id']);
  }

  if (isset($element['settings_wrapper']['settings']['view_mode'])) {
    $invalid_view_modes = [
      'default',
      'full',
      'intro_page',
      'search_result',
      'analytic_on_annotation_form',
      'highlighted', // check this one
      'rss',
      'search_index',
      'token'
    ];
    foreach($invalid_view_modes as $view_mode) {
      unset($element['settings_wrapper']['settings']['view_mode']['#options'][$view_mode]);
    }
    if ($element['settings_wrapper']['settings']['view_mode']['#default_value'] == 'default') {
      $element['settings_wrapper']['settings']['view_mode']['#default_value'] = 'card';
    }
  }

  return $element;
}

/**
 * Helps node add & edit form alters feature a 'Save and edit layout' button.
 *
 * After a brief power struggle with the Gin theme.
 */
function pece_essays_emphasize_edit_layout_button(&$form) {
  // Feature save and edit layout button; move Save button into kebab menu.
  // `#gin_action_item` is what makes the change though it currently only works
  // with patch from https://www.drupal.org/project/gin/issues/3486743
  // See also https://www.drupal.org/project/gin/issues/3488023 (docs issue)

  $form['actions']['submit']['#button_type'] = 'secondary';
  // This does not work to remove buttons actually.
  $form['actions']['submit']['#gin_action_item'] = FALSE;
  $form['actions']['layout_builder_save_and_edit_layout']['#button_type'] = 'primary';
  $form['actions']['layout_builder_save_and_edit_layout']['#gin_action_item'] = TRUE;
}
